{"version":3,"sources":["logo.svg","data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","제목","styled","h4","props","색상","Info","재고","Detail","history","useHistory","useParams","prd","pds","find","pd","useState","useAlert","setAlert","useInput","setInput","useEffect","timer","setTimeout","console","log","clearTimeout","className","type","onChange","e","target","value","src","Number","parseInt","width","onClick","newArry","재고변경","goBack","push","Product","num","imgpath","alt","LoadingData","App","Data","shoes","setShoes","useIsLoading","setIsLoading","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","map","a","i","idx","axios","get","then","result","data","newShoes","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8f0d132.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default [\r\n    {\r\n        id : 0,\r\n        title : \"White and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n      },\r\n    \r\n      {\r\n        id : 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n      },\r\n    \r\n      {\r\n        id : 2,\r\n        title : \"Grey Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 130000\r\n      }\r\n]","import axios from 'axios';\r\nimport React , { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport styled from 'styled-components'\r\nimport './Detail.scss';\r\n\r\n\r\nlet 제목 = styled.h4`\r\nfont-size:20px; \r\ncolor:${props => props.색상} `;\r\n\r\n\r\nfunction Detail(props){\r\n    let history = useHistory();\r\n    let {id,title} = useParams();\r\n    let prd = props.pds.find(function( pd) {  return pd.id == id}); //id는 useParams값에서 받아온것임\r\n    let [useAlert, setAlert] = useState(true);\r\n    let [useInput, setInput] = useState('');\r\n    //useEffect는 여러개 써도 되고 순서대로 실행됨\r\n\r\n    //언제실행되는데?: 1)페이지 등장, 2)업데이트 , 3)사라질때\r\n    //특정 state가 실행될때만 useEffect가 실행되도록 조건 추가할때는 [] 안에 조건을 녛는다 , \r\n    //[]만쓰고 안에 조건을 녛지 않으면 조건이 없으므로  Detail 등장시 헌번 실행하고 끝남\r\n    useEffect(()=> {\r\n        //-----Detail 페이지가 열린후 실행 (mount될때)\r\n\r\n        //detail 컴포넌트 로드시 ajax로 데이터를 가져오고 싶음\r\n        //axios.get();\r\n\r\n\r\n        //alert창이 2초후에 사라지게\r\n        let timer = setTimeout( () => { setAlert(false)}, 2000);\r\n        console.log('useeffect');\r\n\r\n\r\n        //-----Datail 페이지가 사라질때 timer 제거 해야함 그래야 에러안남\r\n        return () => { clearTimeout(timer) }\r\n    }, []); //[] 안에 조건없으니까 등장시에만 한번 실행하고 끝납니다.\r\n\r\n    useEffect(()=> {\r\n        //Detail 페이지가 사라질때 실행 (unmount될때)\r\n        \r\n        //return function(){ //실행할코드 }\r\n    });\r\n\r\n    return (\r\n            <div className=\"container\">\r\n                {useInput}\r\n                <input type=\"text\" onChange = {(e)=> { setInput(e.target.value)}}/>\r\n                <제목 색상={'red'}>제목ㅇㅇㅇ</제목>\r\n                <제목 색상={'blue'}>제목ㅇㅇㅇ</제목>\r\n\r\n                {\r\n                    useAlert === true \r\n                    ?   <div className=\"my-alert2\">\r\n                            <p>마감임박</p>\r\n                        </div>\r\n                    :   null\r\n                }    \r\n            \r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img src={`https://codingapple1.github.io/shop/shoes${Number.parseInt(prd.id)+1}.jpg`} width=\"100%\" />\r\n                </div>\r\n                <div className=\"col-md-6 mt-4\">\r\n                  <h4 className=\"pt-5\">{prd.title}</h4>\r\n                  <p>{prd.content}</p>\r\n                  <p>{prd.price}원</p>\r\n                  <Info 재고 = {props.재고}/>\r\n                  <button className=\"btn btn-danger\" onClick = { \r\n                    function(){\r\n                        //재고 변경\r\n                        let newArry =  [...props.재고]//카 \r\n                          newArry = [9,10,11]//변\r\n                          props.재고변경(newArry);//함\r\n\r\n                        //props.재고변경([3,4,5, ...props.재고])\r\n                    }\r\n                  }>주문하기</button> \r\n                  <button className=\"btn btn-danger\" onClick = { ()=>{\r\n                      history.goBack();\r\n                  }}>뒤로가기</button> \r\n                  <button className=\"btn btn-danger\" onClick = { ()=>{\r\n                      history.push('/');\r\n                  }}>메인으로</button> \r\n                </div>\r\n              </div>\r\n            </div> \r\n    )\r\n  }\r\n\r\n  function Info(props){\r\n    return(\r\n      <p>재고:{props.재고[0]}</p>\r\n    )\r\n  }\r\n\r\n  export default Detail;","import logo from './logo.svg';\nimport { Navbar , Nav, NavDropdown,Form, FormControl, Button, Jumbotron } from 'react-bootstrap';\nimport React , { useState } from 'react';\nimport { Route, Link, Switch} from 'react-router-dom';\nimport Data from './data.js';\nimport './App.css';\nimport Detail from './Detail.js';\nimport axios from 'axios'; // ajax 요청할수 있는 라이브러리 , 먼저 설치 하고 import 해야함 (설치구문...은 yarn add axios)\n\nfunction App() {\n  let [shoes,setShoes] = useState(Data); \n  let [useIsLoading, setIsLoading] = useState(false);\n  let [재고,재고변경] = useState([10,11,12]);\n \n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">ShoesShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link><Link to='/'>Home</Link></Nav.Link>\n            <Nav.Link><Link to='/detail'>Detail</Link></Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n      \n        </Navbar.Collapse>\n      </Navbar>\n\n    <Switch> {/*선택 하나만 해라, 경로가 공통되는 부분이 잇는 router가 있으면 제일 위에거 보여줌 */}\n    {/* Route path=\"/\" */}\n      <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season Off!</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          \n          <div className=\"container\">\n            <div className=\"row\">\n            {\n              shoes.map( function(a, i){\n                  return (<Product pds = {shoes} pd = {a} idx = {i}  />)\n              })\n            }\n            </div>\n            <Button className=\"btn btn-primary\" onClick = {() => {\n              // 버튼 누르면 서버에 데이터 요청 , get 방식은 보통 데이터 읽기 요청할때 씀 , ajax 쓰면 새로고침없이 데이터를 받아올수 있다. 그게 ajex스는 이유임 \n              \n              //로딩창 show\n              setIsLoading(true);\n             \n              //axios.post('서버url', {id:'ellie', pw:'dreamcoding'}); // 서버로 몰래 새로고침 안되고 데이터 전송하고 싶을때 사용 / axios.post('서버url', '보낼 데이터');\n              \n              //1. axios.get(데이터요청할 url) , get 요청은 브라우저 url 창에 입력해도 요청하는 거임.\n              axios.get(\"https://codingapple1.github.io/shop/data2.json\") //get 함수로 url 페이지로 요청\n              .then( (result)=> { // then 요청이 성공시 실행, 그냥 콜백함수 녛어서 실행함 내용 써줌, axios쓰면 json을 object로 알아서 바꿔서 넘겨줌\n\n                //로딩창 no show\n                setIsLoading(false);\n\n                  console.log(result.data);\n\n                  //get 성공하면 받은 데이터를 화면에 뿌리게.. 하려면 그냥 state 값만 변경하면 자동으로 업데이트 되겟지\n                  let newShoes = [...shoes];\n                  console.log(newShoes);\n                  //newShoes.concat(result.data);\n                  newShoes.push(...result.data);\n                  console.log(newShoes);\n                  setShoes(newShoes);\n\n                 // setShoes([...shoes , ...result.data]); //...은 [] 를 벗긴다. [ {},{}]  => {},{}\n              } ) \n              .catch( (err)=> { \n                console.log(`실패했어요: ${err}`);\n                //로딩창 no show\n                setIsLoading(false);\n              \n              } )// catch 요청 실패시 실행\n            }\n            }>더보기</Button>\n\n              \n            { \n              //로딩창 보이기 유무\n              useIsLoading === true? <LoadingData />:null \n            } \n\n          </div>\n\n      </Route>\n    {/* Route path=\"/detail\" */}\n        <Route path=\"/detail/:id\">\n            <Detail pds = {shoes} 재고 = {재고} 재고변경 = {재고변경}/>\n        </Route> \n    {/* Route path=\"/:id\" */}\n        <Route path=\"/:id\"> {/*모든 문자라는 경로를 의미 */}\n            <div>아무거나 보여주세요</div>\n        </Route>\n\n    </Switch>\n    </div>\n  );\n}\n\nfunction Product(props){\n  console.log(props.pd.id);\n  let num = Number.parseInt(props.pd.id) +1;\n  let imgpath = `https://codingapple1.github.io/shop/shoes${num}.jpg`;\n  console.log(imgpath);\n\n  return(\n    <div className=\"col-md-4\">\n              <img src={imgpath} alt=\"\"/>\n              <h4>{props.pd.title}</h4>\n              <p>{props.pd.content} & {props.pd.price}</p>\n    </div>\n  );\n}\n\nfunction LoadingData(){\n  return(\n          <div>\n              <p>데이터 로딩중...</p>\n          </div>\n  );\n}\n\n\n\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}